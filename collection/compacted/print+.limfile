-- NAME:    print+
-- AUTHOR:  DuckAfire
-- VERSION: 4.3.0
-- LICENSE: Zlib License
--
-- Copyright (C) 2024 DuckAfire <duckafire.github.io/nest>
--
-- This software is provided 'as-is', without any express or implied
-- warranty. In no event will the authors be held liable for any damages
-- arising from the use of this software.
--
-- Permission is granted to anyone to use this software for any purpose,
-- including commercial applications, and to alter it and redistribute it
-- freely, subject to the following restrictions:
--
-- 1. The origin of this software must not be misrepresented; you must not
--    claim that you wrote the original software. If you use this software
--    in a product, an acknowledgment in the product documentation would be
--    appreciated but is not required.
-- 2. Altered source versions must be plainly marked as such, and must not be
--    misrepresented as being the original software.
-- 3. This notice may not be removed or altered from any source distribution.

local DA2={}
do local T63,E3,T21,P11,MA0,SF3,T19,SS14,T20,S60=trace,error,type,print,math.abs,string.find,tonumber,string.sub,tostring,spr local function libError(a,b,c,d,e,f)if a~=nil then if not a then return end end local g={"Error","Function","Index"}local h={nil,e,"#"..f}local i="\n\n[print+]"b=(b)and'"'..b..'" ' or"" local function j(k)h[1]=b..k end if c=="1" then j("was not specified")elseif c=="2" then j("was not defined")elseif c=="3" then j("is invalid")else j(c)end for l=1,3 do i=i.."\n"..g[l]..": "..h[l].."." if l==1 and d~=nil then i=i.."\nTry: " for m=1,#d-1 do i=i..d[l].." | " end i=i..d[#d] end end T63("\n>\n>\n>")E3(i.."\n")end local LenBy=1 local ShaBy=1 DA2.length=function(a,b,c,d,e)local f={"length","center","pCenter","pShadow","pBorder","pList"}libError(T21(a)~="string","text","1",nil,f[LenBy],1)LenBy=1 c=c or 1 e=e or 1 return P11(a,0,136,0,b,c,d),(6*c)*e end DA2.center=function(a,b,c,d,e,f,g)b,c=b or 0,c or 0 if LenBy<2 then LenBy=2 end local h,i=DA2.length(a,d,e,f,g)return b-h//2+1,c-i//2+1 end DA2.pCenter=function(a,b,c,d,e,f,g,h)LenBy=3 b,c=DA2.center(a,b,c,e,f,g,h)P11(a,b,c,d,e,f or 1,g)end DA2.pShadow=function(a,b,c,d,e,f,g,h,i) local j=(ShaBy==1)and"pShadow" or"pList" local k={}if T21(b)=="number" then k[1]=b<0 and 0 or b>15 and 15 or MA0(b)k[1]=k[1].."-1" elseif T21(b)=="table" then for l=1,#b do k[l]=b[l]end else libError(nil,"shadow","is not a number or table",nil,j,5)end if i then LenBy=4 c,d=DA2.center(a,c,d,f,g,h)end g=g or 1 local m,n,o="",0,0 local p,q,r={},{},{}local s={p,q,r,"color","direction","distance"}local t={[0]={0,-1},{0,1},{-1,0},{1,0}} libError(k[1]==nil,"shadow","values not defined",nil,j,1)for l=1,((#k<4)and#k or 4)do for u=1,2 do m=SF3(k[l],"-")if#k[l]==1 or T19(k[l])~=nil then m=0 end libError(m==nil,nil,"Hyphen not specified. In index #"..l..' of the table "shadow"',nil,j,1)if u==1 then p[l]=SS14(k[l],1,m-1)k[l]=SS14(k[l],m+1,#k[l])else q[l]=SS14(k[l],1,m-1)if m==0 then r[l]=g else r[l]=SS14(k[l],m+1,#k[l])end end for v=1,3 do if s[v][l]~=nil then s[v][l]=T19(s[v][l])end end end for u=1,3 do libError(T21(T19(s[u][l]))~="number",nil,"The element "..s[u+3]..' is NaN. In index #'..l..' of the table "shadow".',nil,j,1)end for v=2,3 do s[v][l]=(s[v][l]<0)and 0 or(s[v][l]>3)and 3 or s[v][l]end n=c+t[q[l]][1]*r[l]o=d+t[q[l]][2]*r[l]P11(a,n,o,p[l],f,g,h)end P11(a,c,d,e,f,g,h)ShaBy=1 end DA2.pBorder=function(a,b,c,d,e,f,g,h,i,j)local k,l=0,0 local m={{0,-1},{0,1},{-1,0},{1,0}}if j then LenBy=5 b,c=DA2.center(a,b,c,f,g,i)end g=g or 1 n=e or 0 h=h or g for o=1,4 do k=b+m[o][1]*h l=c+m[o][2]*h P11(a,k,l,e,f,g,i)end P11(a,b,c,d,f,g,i)end DA2.pList=function(a,b,c,d,e,f,g,h,j,i,k)libError(T21(a)~="table","text","1",nil,"pList",1)b,c=b or 0,c or 0 g=g or 1 e=e or 13*g j=j or-1 if k then libError(T21(k)~="table","effect","1",nil,"pList",10)libError(k[1]~="shadow" and k[1]~="border","effect[1]","3",{"shadow","border"},"pList",10)if k[1]=="shadow" then libError(T21(k[2])~="table" and T21(k[2])~="number","effect[2]","is not a table or number",nil,"pList",10)elseif k[1]=="border" then libError(T21(k[2])~="number","effect[2]","is NaN",nil,"pList",10) end end local l=0 if i or j~=-1 then local m=0 for n=1,#a do if m<#a[n]then m=n end end LenBy=6 if i then b,c=DA2.center(a[m],b,c-#a,f,g,h,#a)end l=DA2.length(a[m],f,g,h) end local o,p=0,0 for n=1,#a do o=b p=c+e*(n-1)if j~=-1 then LenBy=6 if j==0 then o=DA2.center(a[n],o+l//2,p,f,g,h)elseif j==1 then o=o+l-DA2.length(a[n],f,g,h)end end if not k then P11(T20(a[n]),o,p,d,f,g,h)else if k[1]=="shadow" then ShaBy=2 DA2.pShadow(a[n],k[2],o,p,d,f,g,h)elseif k[1]=="border" then DA2.pBorder(a[n],o,p,d,k[2],f,g,k[3],h)end end end end DA2.title=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o)libError(T21(p)=="table",'"sprites"',"1",nil,"title",1)local q,r,s={},{},0 if T21(i)~="table" then s=i or 0 for t=1,#a do q[t]=s end else q=i end if T21(j)~="table" then s=j or 0 for t=1,#a do r[t]=s end else r=j end local function u(v,w,x)libError(#a>#v,w,"has a insuficient quatity of indexes","title",x)end u(q,"flip",9)u(r,"rotate",10)local y=nil if T21(d)=="number" then y={}for t=1,#a do y[t]=d end elseif T21(d)=="table" then u(d,"chromaKey",4)y=d else y={}for t=1,#a do y[t]=0 end end b,c=b or 0,c or 0 f=f or 1 e=e or 1 n=n or 1 o=o or 1 g=(g or 8)*f h=(h or 8)*f local z,a3=0,0 if k then z=(m)and(g//2)or((g+e)*#a-e)//2 end if l then a3=(m)and(((h+e)*#a-e)//2)or(h//2)end local a1,a2 for t=1,#a do if m then a1=b-z a2=c+((h+e)*(t-1))-a3 else a1=b+((g+e)*(t-1))-z a2=c-a3 end S60(a[t],a1,a2,y[t],f,q[t],r[t],n,o)end end end
--local reference=DA2
